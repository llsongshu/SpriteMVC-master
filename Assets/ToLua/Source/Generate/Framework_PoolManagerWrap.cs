//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Framework_PoolManagerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Framework.PoolManager), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("CreatePool", CreatePool);
		L.RegFunction("GetPool", GetPool);
		L.RegFunction("GetGameObject", GetGameObject);
		L.RegFunction("Recyle", Recyle);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CreatePool(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			Framework.PoolManager obj = (Framework.PoolManager)ToLua.CheckObject<Framework.PoolManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			UnityEngine.GameObject arg1 = (UnityEngine.GameObject)ToLua.CheckObject(L, 3, typeof(UnityEngine.GameObject));
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 4);
			Framework.GameObjectPool o = obj.CreatePool(arg0, arg1, arg2);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetPool(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Framework.PoolManager obj = (Framework.PoolManager)ToLua.CheckObject<Framework.PoolManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			Framework.GameObjectPool o = obj.GetPool(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetGameObject(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Framework.PoolManager obj = (Framework.PoolManager)ToLua.CheckObject<Framework.PoolManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			UnityEngine.GameObject o = obj.GetGameObject(arg0);
			ToLua.PushSealed(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Recyle(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Framework.PoolManager obj = (Framework.PoolManager)ToLua.CheckObject<Framework.PoolManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			UnityEngine.GameObject arg1 = (UnityEngine.GameObject)ToLua.CheckObject(L, 3, typeof(UnityEngine.GameObject));
			obj.Recyle(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

